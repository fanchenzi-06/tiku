//蛇形矩阵

/*由1开始的自然数依次排列成的一个矩阵三角形
1.有多组数据（n不大于100） 每组数据由一个正整数n组成
2.对于每组数据 输出一个n行的蛇形矩阵  两组输出之间不要额外的空行  
  矩阵三角中同一行数字用一个空格分开  行尾不要有多余空格 
  
n=5  -> 1     3  6  10  15         肉眼看发现斜着排放数据 
		(+1)  (+2) 					计算机中数据要按行看或者按列看 
		2	  5  9  14				矩阵总是行列行列排着 
		(+2)  (+3)
		4     8  13					进而发现数据等差且递增 
		(+3)  (+4)
		7     12
		(+4)
		11
		*/
		
#include<iostream>
using namespace std;

int main(){
	int n;
	cin>>n;
	for(int e=0;e<n;e++){
		int nn;
		cin>>nn;
		int vis[105][105];  //每组数据规模不超过100  留5防止数据溢出
		vis[0][0]=1;
		int rows=1;     //第一行最头的一列开始差为1  先编写第一列
		for(int i=1;i<nn;i++)
		{
			vis[i][0]=vis[i-1][0]+rows;
			rows++;	
		} 
		int zero_one=2;   //每一行的初始差值(即每一行第0个数据和第一个数据差值)(zero_one) 
		for(int i=0;i<nn;i++)
		{
			int delta=zero_one;    //一行之内每个数据的差值(delta)递增 
			for(int j=1;j<nn;j++)
			{
				vis[i][j]=vis[i][j-1]+delta;
				delta++;	
			}	
			zero_one++;  //每一行初始差值等差 
		}
		int tt=nn;
		for(int i=0;i<nn;i++)
		{
			for(int j=0;j<tt;j++)
			{
				cout<<vis[i][j];
				if(j!=tt-1)
				{
					cout<<" ";
				}
			}
			tt--;
			cout<<endl;
		}
	}
	
	return 0; 
} 


